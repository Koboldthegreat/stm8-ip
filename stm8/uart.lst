                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.8 #9946 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module uart
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _uart_init
                                     12 	.globl _uart_write
                                     13 	.globl _uart_read
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; absolute external ram data
                                     24 ;--------------------------------------------------------
                                     25 	.area DABS (ABS)
                                     26 ;--------------------------------------------------------
                                     27 ; global & static initialisations
                                     28 ;--------------------------------------------------------
                                     29 	.area HOME
                                     30 	.area GSINIT
                                     31 	.area GSFINAL
                                     32 	.area GSINIT
                                     33 ;--------------------------------------------------------
                                     34 ; Home
                                     35 ;--------------------------------------------------------
                                     36 	.area HOME
                                     37 	.area HOME
                                     38 ;--------------------------------------------------------
                                     39 ; code
                                     40 ;--------------------------------------------------------
                                     41 	.area CODE
                                     42 ;	../../stm8/uart.c: 4: void uart_init() {
                                     43 ;	-----------------------------------------
                                     44 ;	 function uart_init
                                     45 ;	-----------------------------------------
      000000                         46 _uart_init:
                                     47 ;	../../stm8/uart.c: 8: UART1_BRR2 = ((div >> 8) & 0xF0) + (div & 0x0F);
      000000 35 03 52 33      [ 1]   48 	mov	0x5233+0, #0x03
                                     49 ;	../../stm8/uart.c: 9: UART1_BRR1 = div >> 4;
      000004 A6 68            [ 1]   50 	ld	a, #0x68
      000006 AE 52 32         [ 2]   51 	ldw	x, #0x5232
      000009 F7               [ 1]   52 	ld	(x), a
                                     53 ;	../../stm8/uart.c: 11: UART1_CR2 = (1 << UART1_CR2_TEN) | (1 << UART1_CR2_REN);
      00000A 35 0C 52 35      [ 1]   54 	mov	0x5235+0, #0x0c
      00000E 81               [ 4]   55 	ret
                                     56 ;	../../stm8/uart.c: 14: void uart_write(uint8_t data) {
                                     57 ;	-----------------------------------------
                                     58 ;	 function uart_write
                                     59 ;	-----------------------------------------
      00000F                         60 _uart_write:
                                     61 ;	../../stm8/uart.c: 15: UART1_DR = data;
      00000F AE 52 31         [ 2]   62 	ldw	x, #0x5231
      000012 7B 03            [ 1]   63 	ld	a, (0x03, sp)
      000014 F7               [ 1]   64 	ld	(x), a
                                     65 ;	../../stm8/uart.c: 16: while (!(UART1_SR & (1 << UART1_SR_TC)));
      000015                         66 00101$:
      000015 AE 52 30         [ 2]   67 	ldw	x, #0x5230
      000018 F6               [ 1]   68 	ld	a, (x)
      000019 A5 40            [ 1]   69 	bcp	a, #0x40
      00001B 27 F8            [ 1]   70 	jreq	00101$
      00001D 81               [ 4]   71 	ret
                                     72 ;	../../stm8/uart.c: 19: uint8_t uart_read() {
                                     73 ;	-----------------------------------------
                                     74 ;	 function uart_read
                                     75 ;	-----------------------------------------
      00001E                         76 _uart_read:
                                     77 ;	../../stm8/uart.c: 20: while (!(UART1_SR & (1 << UART1_SR_RXNE)));
      00001E                         78 00101$:
      00001E AE 52 30         [ 2]   79 	ldw	x, #0x5230
      000021 F6               [ 1]   80 	ld	a, (x)
      000022 A5 20            [ 1]   81 	bcp	a, #0x20
      000024 27 F8            [ 1]   82 	jreq	00101$
                                     83 ;	../../stm8/uart.c: 21: return UART1_DR;
      000026 AE 52 31         [ 2]   84 	ldw	x, #0x5231
      000029 F6               [ 1]   85 	ld	a, (x)
      00002A 81               [ 4]   86 	ret
                                     87 	.area CODE
                                     88 	.area INITIALIZER
                                     89 	.area CABS (ABS)
