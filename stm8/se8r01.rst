                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.8 #9946 (Linux)
                                      4 ;--------------------------------------------------------
                                      5 	.module se8r01
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _printf
                                     12 	.globl _uart_read
                                     13 	.globl _uart_write
                                     14 	.globl _init_bit
                                     15 	.globl _SPI_write_read_bit
                                     16 	.globl _putchar
                                     17 	.globl _getchar
                                     18 	.globl _SPI_write_read_reg
                                     19 	.globl _SPI_write_buf
                                     20 	.globl _SPI_read_buf
                                     21 	.globl _se8r01_init
                                     22 	.globl _se8r01_wait_rx
                                     23 	.globl _se8r01_tx
                                     24 	.globl _se8r01_get_status
                                     25 	.globl _init_io
                                     26 	.globl _clear_IRQ_flags
                                     27 	.globl _rf_switch_bank
                                     28 	.globl _se8r01_powerup
                                     29 	.globl _se8r01_calibration
                                     30 	.globl _se8r01_setup
                                     31 	.globl _se8r01_settings
                                     32 	.globl _se8r01_flush_TX
                                     33 	.globl _se8r01_flush_RX
                                     34 ;--------------------------------------------------------
                                     35 ; ram data
                                     36 ;--------------------------------------------------------
                                     37 	.area DATA
                                     38 ;--------------------------------------------------------
                                     39 ; ram data
                                     40 ;--------------------------------------------------------
                                     41 	.area INITIALIZED
                                     42 ;--------------------------------------------------------
                                     43 ; absolute external ram data
                                     44 ;--------------------------------------------------------
                                     45 	.area DABS (ABS)
                                     46 ;--------------------------------------------------------
                                     47 ; global & static initialisations
                                     48 ;--------------------------------------------------------
                                     49 	.area HOME
                                     50 	.area GSINIT
                                     51 	.area GSFINAL
                                     52 	.area GSINIT
                                     53 ;--------------------------------------------------------
                                     54 ; Home
                                     55 ;--------------------------------------------------------
                                     56 	.area HOME
                                     57 	.area HOME
                                     58 ;--------------------------------------------------------
                                     59 ; code
                                     60 ;--------------------------------------------------------
                                     61 	.area CODE
                                     62 ;	../../stm8/delay.h: 11: static inline void delay_ms(uint32_t ms) {
                                     63 ;	-----------------------------------------
                                     64 ;	 function delay_ms
                                     65 ;	-----------------------------------------
      00810D                         66 _delay_ms:
      00810D 52 08            [ 2]   67 	sub	sp, #8
                                     68 ;	../../stm8/delay.h: 12: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000UL) * ms); i++) {
      00810F 5F               [ 1]   69 	clrw	x
      008110 1F 03            [ 2]   70 	ldw	(0x03, sp), x
      008112 1F 01            [ 2]   71 	ldw	(0x01, sp), x
      008114 1E 0D            [ 2]   72 	ldw	x, (0x0d, sp)
      008116 89               [ 2]   73 	pushw	x
      008117 1E 0D            [ 2]   74 	ldw	x, (0x0d, sp)
      008119 89               [ 2]   75 	pushw	x
      00811A 4B 6F            [ 1]   76 	push	#0x6f
      00811C 5F               [ 1]   77 	clrw	x
      00811D 89               [ 2]   78 	pushw	x
      00811E 4B 00            [ 1]   79 	push	#0x00
      008120 CD 8A 66         [ 4]   80 	call	__mullong
      008123 5B 08            [ 2]   81 	addw	sp, #8
      008125 1F 07            [ 2]   82 	ldw	(0x07, sp), x
      008127 17 05            [ 2]   83 	ldw	(0x05, sp), y
      008129                         84 00103$:
      008129 1E 03            [ 2]   85 	ldw	x, (0x03, sp)
      00812B 13 07            [ 2]   86 	cpw	x, (0x07, sp)
      00812D 7B 02            [ 1]   87 	ld	a, (0x02, sp)
      00812F 12 06            [ 1]   88 	sbc	a, (0x06, sp)
      008131 7B 01            [ 1]   89 	ld	a, (0x01, sp)
      008133 12 05            [ 1]   90 	sbc	a, (0x05, sp)
      008135 24 17            [ 1]   91 	jrnc	00105$
                                     92 ;	../../stm8/delay.h: 13: __asm__("nop");
      008137 9D               [ 1]   93 	nop
                                     94 ;	../../stm8/delay.h: 12: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000UL) * ms); i++) {
      008138 16 03            [ 2]   95 	ldw	y, (0x03, sp)
      00813A 72 A9 00 01      [ 2]   96 	addw	y, #0x0001
      00813E 7B 02            [ 1]   97 	ld	a, (0x02, sp)
      008140 A9 00            [ 1]   98 	adc	a, #0x00
      008142 97               [ 1]   99 	ld	xl, a
      008143 7B 01            [ 1]  100 	ld	a, (0x01, sp)
      008145 A9 00            [ 1]  101 	adc	a, #0x00
      008147 95               [ 1]  102 	ld	xh, a
      008148 17 03            [ 2]  103 	ldw	(0x03, sp), y
      00814A 1F 01            [ 2]  104 	ldw	(0x01, sp), x
      00814C 20 DB            [ 2]  105 	jra	00103$
      00814E                        106 00105$:
      00814E 5B 08            [ 2]  107 	addw	sp, #8
      008150 81               [ 4]  108 	ret
                                    109 ;	../../stm8/delay.h: 17: static inline void delay_us(uint32_t us) {
                                    110 ;	-----------------------------------------
                                    111 ;	 function delay_us
                                    112 ;	-----------------------------------------
      008151                        113 _delay_us:
                                    114 ;	../../stm8/delay.h: 18: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000000UL) * us); i++) {
      008151 90 5F            [ 1]  115 	clrw	y
      008153 5F               [ 1]  116 	clrw	x
      008154                        117 00103$:
      008154 90 A3 00 00      [ 2]  118 	cpw	y, #0x0000
      008158 9F               [ 1]  119 	ld	a, xl
      008159 A2 00            [ 1]  120 	sbc	a, #0x00
      00815B 9E               [ 1]  121 	ld	a, xh
      00815C A2 00            [ 1]  122 	sbc	a, #0x00
      00815E 25 01            [ 1]  123 	jrc	00115$
      008160 81               [ 4]  124 	ret
      008161                        125 00115$:
                                    126 ;	../../stm8/delay.h: 19: __asm__("nop");
      008161 9D               [ 1]  127 	nop
                                    128 ;	../../stm8/delay.h: 18: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000000UL) * us); i++) {
      008162 90 5C            [ 1]  129 	incw	y
      008164 26 EE            [ 1]  130 	jrne	00103$
      008166 5C               [ 1]  131 	incw	x
      008167 20 EB            [ 2]  132 	jra	00103$
      008169 81               [ 4]  133 	ret
                                    134 ;	../../stm8/se8r01.c: 13: int putchar(int c) {
                                    135 ;	-----------------------------------------
                                    136 ;	 function putchar
                                    137 ;	-----------------------------------------
      00816A                        138 _putchar:
                                    139 ;	../../stm8/se8r01.c: 14: uart_write(c);
      00816A 7B 04            [ 1]  140 	ld	a, (0x04, sp)
      00816C 88               [ 1]  141 	push	a
      00816D CD 88 2B         [ 4]  142 	call	_uart_write
      008170 84               [ 1]  143 	pop	a
                                    144 ;	../../stm8/se8r01.c: 15: return 0;
      008171 5F               [ 1]  145 	clrw	x
      008172 81               [ 4]  146 	ret
                                    147 ;	../../stm8/se8r01.c: 18: char getchar() {
                                    148 ;	-----------------------------------------
                                    149 ;	 function getchar
                                    150 ;	-----------------------------------------
      008173                        151 _getchar:
                                    152 ;	../../stm8/se8r01.c: 19: return uart_read();
      008173 CC 88 3A         [ 2]  153 	jp	_uart_read
                                    154 ;	../../stm8/se8r01.c: 22: uint8_t SPI_write_read_reg(uint8_t reg, uint8_t value) {
                                    155 ;	-----------------------------------------
                                    156 ;	 function SPI_write_read_reg
                                    157 ;	-----------------------------------------
      008176                        158 _SPI_write_read_reg:
      008176 88               [ 1]  159 	push	a
                                    160 ;	../../stm8/se8r01.c: 25: CSN_L(); //enable spi
      008177 AE 50 0A         [ 2]  161 	ldw	x, #0x500a
      00817A F6               [ 1]  162 	ld	a, (x)
      00817B A4 EF            [ 1]  163 	and	a, #0xef
      00817D F7               [ 1]  164 	ld	(x), a
                                    165 ;	../../stm8/se8r01.c: 26: status = SPI_write_read_bit(reg); //select register
      00817E 7B 04            [ 1]  166 	ld	a, (0x04, sp)
      008180 88               [ 1]  167 	push	a
      008181 CD 89 24         [ 4]  168 	call	_SPI_write_read_bit
      008184 5B 01            [ 2]  169 	addw	sp, #1
      008186 6B 01            [ 1]  170 	ld	(0x01, sp), a
                                    171 ;	../../stm8/se8r01.c: 27: SPI_write_read_bit(value); //write value to it
      008188 7B 05            [ 1]  172 	ld	a, (0x05, sp)
      00818A 88               [ 1]  173 	push	a
      00818B CD 89 24         [ 4]  174 	call	_SPI_write_read_bit
      00818E 84               [ 1]  175 	pop	a
                                    176 ;	../../stm8/se8r01.c: 28: CSN_H(); //disable spi
      00818F AE 50 0A         [ 2]  177 	ldw	x, #0x500a
      008192 F6               [ 1]  178 	ld	a, (x)
      008193 AA 10            [ 1]  179 	or	a, #0x10
      008195 F7               [ 1]  180 	ld	(x), a
                                    181 ;	../../stm8/se8r01.c: 30: return status;
      008196 7B 01            [ 1]  182 	ld	a, (0x01, sp)
      008198 5B 01            [ 2]  183 	addw	sp, #1
      00819A 81               [ 4]  184 	ret
                                    185 ;	../../stm8/se8r01.c: 33: uint8_t SPI_write_buf(uint8_t reg, uint8_t *pBuf, uint8_t bytes) {
                                    186 ;	-----------------------------------------
                                    187 ;	 function SPI_write_buf
                                    188 ;	-----------------------------------------
      00819B                        189 _SPI_write_buf:
      00819B 88               [ 1]  190 	push	a
                                    191 ;	../../stm8/se8r01.c: 36: CSN_L();
      00819C AE 50 0A         [ 2]  192 	ldw	x, #0x500a
      00819F F6               [ 1]  193 	ld	a, (x)
      0081A0 A4 EF            [ 1]  194 	and	a, #0xef
      0081A2 F7               [ 1]  195 	ld	(x), a
                                    196 ;	../../stm8/se8r01.c: 37: status = SPI_write_read_bit(reg);
      0081A3 7B 04            [ 1]  197 	ld	a, (0x04, sp)
      0081A5 88               [ 1]  198 	push	a
      0081A6 CD 89 24         [ 4]  199 	call	_SPI_write_read_bit
      0081A9 5B 01            [ 2]  200 	addw	sp, #1
      0081AB 6B 01            [ 1]  201 	ld	(0x01, sp), a
                                    202 ;	../../stm8/se8r01.c: 38: for (uint8_t i=0; i<bytes; i++) {
      0081AD 4F               [ 1]  203 	clr	a
      0081AE                        204 00103$:
      0081AE 11 07            [ 1]  205 	cp	a, (0x07, sp)
      0081B0 24 13            [ 1]  206 	jrnc	00101$
                                    207 ;	../../stm8/se8r01.c: 39: SPI_write_read_bit(pBuf[i]);
      0081B2 5F               [ 1]  208 	clrw	x
      0081B3 97               [ 1]  209 	ld	xl, a
      0081B4 72 FB 05         [ 2]  210 	addw	x, (0x05, sp)
      0081B7 88               [ 1]  211 	push	a
      0081B8 F6               [ 1]  212 	ld	a, (x)
      0081B9 97               [ 1]  213 	ld	xl, a
      0081BA 89               [ 2]  214 	pushw	x
      0081BB 5B 01            [ 2]  215 	addw	sp, #1
      0081BD CD 89 24         [ 4]  216 	call	_SPI_write_read_bit
      0081C0 84               [ 1]  217 	pop	a
      0081C1 84               [ 1]  218 	pop	a
                                    219 ;	../../stm8/se8r01.c: 38: for (uint8_t i=0; i<bytes; i++) {
      0081C2 4C               [ 1]  220 	inc	a
      0081C3 20 E9            [ 2]  221 	jra	00103$
      0081C5                        222 00101$:
                                    223 ;	../../stm8/se8r01.c: 41: CSN_H();
      0081C5 AE 50 0A         [ 2]  224 	ldw	x, #0x500a
      0081C8 F6               [ 1]  225 	ld	a, (x)
      0081C9 AA 10            [ 1]  226 	or	a, #0x10
      0081CB F7               [ 1]  227 	ld	(x), a
                                    228 ;	../../stm8/se8r01.c: 42: return status;
      0081CC 7B 01            [ 1]  229 	ld	a, (0x01, sp)
      0081CE 5B 01            [ 2]  230 	addw	sp, #1
      0081D0 81               [ 4]  231 	ret
                                    232 ;	../../stm8/se8r01.c: 45: uint8_t SPI_read_buf(uint8_t reg, uint8_t *pBuf, uint8_t bytes) {
                                    233 ;	-----------------------------------------
                                    234 ;	 function SPI_read_buf
                                    235 ;	-----------------------------------------
      0081D1                        236 _SPI_read_buf:
      0081D1 52 02            [ 2]  237 	sub	sp, #2
                                    238 ;	../../stm8/se8r01.c: 47: CSN_L();
      0081D3 AE 50 0A         [ 2]  239 	ldw	x, #0x500a
      0081D6 F6               [ 1]  240 	ld	a, (x)
      0081D7 A4 EF            [ 1]  241 	and	a, #0xef
      0081D9 F7               [ 1]  242 	ld	(x), a
                                    243 ;	../../stm8/se8r01.c: 48: status = SPI_write_read_bit(reg); 
      0081DA 7B 05            [ 1]  244 	ld	a, (0x05, sp)
      0081DC 88               [ 1]  245 	push	a
      0081DD CD 89 24         [ 4]  246 	call	_SPI_write_read_bit
      0081E0 5B 01            [ 2]  247 	addw	sp, #1
      0081E2 6B 01            [ 1]  248 	ld	(0x01, sp), a
                                    249 ;	../../stm8/se8r01.c: 49: for(uint8_t i=0; i<bytes; i++) {
      0081E4 4F               [ 1]  250 	clr	a
      0081E5                        251 00103$:
      0081E5 11 08            [ 1]  252 	cp	a, (0x08, sp)
      0081E7 24 18            [ 1]  253 	jrnc	00101$
                                    254 ;	../../stm8/se8r01.c: 50: pBuf[i] = SPI_write_read_bit(0xff);
      0081E9 5F               [ 1]  255 	clrw	x
      0081EA 97               [ 1]  256 	ld	xl, a
      0081EB 72 FB 06         [ 2]  257 	addw	x, (0x06, sp)
      0081EE 88               [ 1]  258 	push	a
      0081EF 89               [ 2]  259 	pushw	x
      0081F0 4B FF            [ 1]  260 	push	#0xff
      0081F2 CD 89 24         [ 4]  261 	call	_SPI_write_read_bit
      0081F5 5B 01            [ 2]  262 	addw	sp, #1
      0081F7 6B 05            [ 1]  263 	ld	(0x05, sp), a
      0081F9 85               [ 2]  264 	popw	x
      0081FA 7B 03            [ 1]  265 	ld	a, (0x03, sp)
      0081FC F7               [ 1]  266 	ld	(x), a
      0081FD 84               [ 1]  267 	pop	a
                                    268 ;	../../stm8/se8r01.c: 49: for(uint8_t i=0; i<bytes; i++) {
      0081FE 4C               [ 1]  269 	inc	a
      0081FF 20 E4            [ 2]  270 	jra	00103$
      008201                        271 00101$:
                                    272 ;	../../stm8/se8r01.c: 52: CSN_H();
      008201 AE 50 0A         [ 2]  273 	ldw	x, #0x500a
      008204 F6               [ 1]  274 	ld	a, (x)
      008205 AA 10            [ 1]  275 	or	a, #0x10
      008207 F7               [ 1]  276 	ld	(x), a
                                    277 ;	../../stm8/se8r01.c: 53: return status;
      008208 7B 01            [ 1]  278 	ld	a, (0x01, sp)
      00820A 5B 02            [ 2]  279 	addw	sp, #2
      00820C 81               [ 4]  280 	ret
                                    281 ;	../../stm8/se8r01.c: 57: void se8r01_init(uint8_t mode) {
                                    282 ;	-----------------------------------------
                                    283 ;	 function se8r01_init
                                    284 ;	-----------------------------------------
      00820D                        285 _se8r01_init:
      00820D 52 04            [ 2]  286 	sub	sp, #4
                                    287 ;	../../stm8/se8r01.c: 59: printf("Initializing SPI\n");
      00820F AE 87 A9         [ 2]  288 	ldw	x, #___str_0+0
      008212 89               [ 2]  289 	pushw	x
      008213 CD 8A 50         [ 4]  290 	call	_printf
      008216 5B 02            [ 2]  291 	addw	sp, #2
                                    292 ;	../../stm8/delay.h: 12: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000UL) * ms); i++) {
      008218 5F               [ 1]  293 	clrw	x
      008219 4F               [ 1]  294 	clr	a
      00821A 0F 01            [ 1]  295 	clr	(0x01, sp)
      00821C                        296 00109$:
      00821C 88               [ 1]  297 	push	a
      00821D A3 2B 5C         [ 2]  298 	cpw	x, #0x2b5c
      008220 7B 01            [ 1]  299 	ld	a, (1, sp)
      008222 A2 00            [ 1]  300 	sbc	a, #0x00
      008224 7B 02            [ 1]  301 	ld	a, (0x02, sp)
      008226 A2 00            [ 1]  302 	sbc	a, #0x00
      008228 84               [ 1]  303 	pop	a
      008229 24 12            [ 1]  304 	jrnc	00105$
                                    305 ;	../../stm8/delay.h: 13: __asm__("nop");
      00822B 9D               [ 1]  306 	nop
                                    307 ;	../../stm8/delay.h: 12: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000UL) * ms); i++) {
      00822C 1C 00 01         [ 2]  308 	addw	x, #0x0001
      00822F A9 00            [ 1]  309 	adc	a, #0x00
      008231 90 97            [ 1]  310 	ld	yl, a
      008233 7B 01            [ 1]  311 	ld	a, (0x01, sp)
      008235 A9 00            [ 1]  312 	adc	a, #0x00
      008237 6B 01            [ 1]  313 	ld	(0x01, sp), a
      008239 90 9F            [ 1]  314 	ld	a, yl
      00823B 20 DF            [ 2]  315 	jra	00109$
                                    316 ;	../../stm8/se8r01.c: 61: delay_ms(100);
      00823D                        317 00105$:
                                    318 ;	../../stm8/se8r01.c: 62: init_bit(); //bit bashing SPI
      00823D CD 89 02         [ 4]  319 	call	_init_bit
                                    320 ;	../../stm8/se8r01.c: 63: init_io();
      008240 CD 83 6F         [ 4]  321 	call	_init_io
                                    322 ;	../../stm8/se8r01.c: 64: printf("Status: %02x \n", se8r01_get_status());
      008243 CD 83 65         [ 4]  323 	call	_se8r01_get_status
      008246 5F               [ 1]  324 	clrw	x
      008247 97               [ 1]  325 	ld	xl, a
      008248 90 AE 87 BB      [ 2]  326 	ldw	y, #___str_1+0
      00824C 89               [ 2]  327 	pushw	x
      00824D 90 89            [ 2]  328 	pushw	y
      00824F CD 8A 50         [ 4]  329 	call	_printf
      008252 5B 04            [ 2]  330 	addw	sp, #4
                                    331 ;	../../stm8/se8r01.c: 66: CE_L();
      008254 AE 50 0A         [ 2]  332 	ldw	x, #0x500a
      008257 F6               [ 1]  333 	ld	a, (x)
      008258 A4 F7            [ 1]  334 	and	a, #0xf7
      00825A F7               [ 1]  335 	ld	(x), a
                                    336 ;	../../stm8/delay.h: 12: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000UL) * ms); i++) {
      00825B 90 5F            [ 1]  337 	clrw	y
      00825D 5F               [ 1]  338 	clrw	x
      00825E                        339 00112$:
      00825E 90 A3 04 56      [ 2]  340 	cpw	y, #0x0456
      008262 9F               [ 1]  341 	ld	a, xl
      008263 A2 00            [ 1]  342 	sbc	a, #0x00
      008265 9E               [ 1]  343 	ld	a, xh
      008266 A2 00            [ 1]  344 	sbc	a, #0x00
      008268 24 08            [ 1]  345 	jrnc	00107$
                                    346 ;	../../stm8/delay.h: 13: __asm__("nop");
      00826A 9D               [ 1]  347 	nop
                                    348 ;	../../stm8/delay.h: 12: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000UL) * ms); i++) {
      00826B 90 5C            [ 1]  349 	incw	y
      00826D 26 EF            [ 1]  350 	jrne	00112$
      00826F 5C               [ 1]  351 	incw	x
      008270 20 EC            [ 2]  352 	jra	00112$
                                    353 ;	../../stm8/se8r01.c: 67: delay_ms(10);
      008272                        354 00107$:
                                    355 ;	../../stm8/se8r01.c: 68: se8r01_powerup();
      008272 CD 84 10         [ 4]  356 	call	_se8r01_powerup
                                    357 ;	../../stm8/se8r01.c: 69: se8r01_calibration();
      008275 CD 84 3B         [ 4]  358 	call	_se8r01_calibration
                                    359 ;	../../stm8/se8r01.c: 70: se8r01_setup();
      008278 CD 85 D4         [ 4]  360 	call	_se8r01_setup
                                    361 ;	../../stm8/se8r01.c: 71: se8r01_settings();
      00827B CD 87 21         [ 4]  362 	call	_se8r01_settings
                                    363 ;	../../stm8/se8r01.c: 72: if (mode == 'r') { //rx mode
      00827E 7B 07            [ 1]  364 	ld	a, (0x07, sp)
      008280 A1 72            [ 1]  365 	cp	a, #0x72
      008282 26 14            [ 1]  366 	jrne	00102$
                                    367 ;	../../stm8/se8r01.c: 73: printf("RX mode\n"); 
      008284 AE 87 CA         [ 2]  368 	ldw	x, #___str_2+0
      008287 89               [ 2]  369 	pushw	x
      008288 CD 8A 50         [ 4]  370 	call	_printf
      00828B 5B 02            [ 2]  371 	addw	sp, #2
                                    372 ;	../../stm8/se8r01.c: 74: SPI_write_read_reg(WRITE_REG | iRF_BANK0_CONFIG, 0x3f);
      00828D 4B 3F            [ 1]  373 	push	#0x3f
      00828F 4B 20            [ 1]  374 	push	#0x20
      008291 CD 81 76         [ 4]  375 	call	_SPI_write_read_reg
      008294 5B 02            [ 2]  376 	addw	sp, #2
      008296 20 2E            [ 2]  377 	jra	00103$
      008298                        378 00102$:
                                    379 ;	../../stm8/se8r01.c: 77: SPI_write_read_reg(WRITE_REG | iRF_BANK0_CONFIG, 0x3e)
      008298 4B 3E            [ 1]  380 	push	#0x3e
      00829A 4B 20            [ 1]  381 	push	#0x20
      00829C CD 81 76         [ 4]  382 	call	_SPI_write_read_reg
      00829F 5B 02            [ 2]  383 	addw	sp, #2
      0082A1 5F               [ 1]  384 	clrw	x
      0082A2 97               [ 1]  385 	ld	xl, a
                                    386 ;	../../stm8/se8r01.c: 76: printf("TX mode, status %02x\n",
      0082A3 90 AE 87 D3      [ 2]  387 	ldw	y, #___str_3+0
      0082A7 89               [ 2]  388 	pushw	x
      0082A8 90 89            [ 2]  389 	pushw	y
      0082AA CD 8A 50         [ 4]  390 	call	_printf
      0082AD 5B 04            [ 2]  391 	addw	sp, #4
                                    392 ;	../../stm8/se8r01.c: 79: printf("connected? %02x\n", SPI_write_read_reg(SETUP_AW, 0xff));
      0082AF 4B FF            [ 1]  393 	push	#0xff
      0082B1 4B 03            [ 1]  394 	push	#0x03
      0082B3 CD 81 76         [ 4]  395 	call	_SPI_write_read_reg
      0082B6 5B 02            [ 2]  396 	addw	sp, #2
      0082B8 5F               [ 1]  397 	clrw	x
      0082B9 97               [ 1]  398 	ld	xl, a
      0082BA 90 AE 87 E9      [ 2]  399 	ldw	y, #___str_4+0
      0082BE 89               [ 2]  400 	pushw	x
      0082BF 90 89            [ 2]  401 	pushw	y
      0082C1 CD 8A 50         [ 4]  402 	call	_printf
      0082C4 5B 04            [ 2]  403 	addw	sp, #4
      0082C6                        404 00103$:
                                    405 ;	../../stm8/se8r01.c: 81: CE_H();
      0082C6 AE 50 0A         [ 2]  406 	ldw	x, #0x500a
      0082C9 F6               [ 1]  407 	ld	a, (x)
      0082CA AA 08            [ 1]  408 	or	a, #0x08
      0082CC F7               [ 1]  409 	ld	(x), a
      0082CD 5B 04            [ 2]  410 	addw	sp, #4
      0082CF 81               [ 4]  411 	ret
                                    412 ;	../../stm8/se8r01.c: 84: uint8_t se8r01_wait_rx(uint8_t *rx_buf) {
                                    413 ;	-----------------------------------------
                                    414 ;	 function se8r01_wait_rx
                                    415 ;	-----------------------------------------
      0082D0                        416 _se8r01_wait_rx:
                                    417 ;	../../stm8/se8r01.c: 87: while (PB_IDR & (1<<IRQ_PIN));
      0082D0                        418 00101$:
      0082D0 AE 50 06         [ 2]  419 	ldw	x, #0x5006
      0082D3 F6               [ 1]  420 	ld	a, (x)
      0082D4 A5 20            [ 1]  421 	bcp	a, #0x20
      0082D6 26 F8            [ 1]  422 	jrne	00101$
                                    423 ;	../../stm8/delay.h: 12: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000UL) * ms); i++) {
      0082D8 90 5F            [ 1]  424 	clrw	y
      0082DA 5F               [ 1]  425 	clrw	x
      0082DB                        426 00110$:
      0082DB 90 A3 00 6F      [ 2]  427 	cpw	y, #0x006f
      0082DF 9F               [ 1]  428 	ld	a, xl
      0082E0 A2 00            [ 1]  429 	sbc	a, #0x00
      0082E2 9E               [ 1]  430 	ld	a, xh
      0082E3 A2 00            [ 1]  431 	sbc	a, #0x00
      0082E5 24 08            [ 1]  432 	jrnc	00108$
                                    433 ;	../../stm8/delay.h: 13: __asm__("nop");
      0082E7 9D               [ 1]  434 	nop
                                    435 ;	../../stm8/delay.h: 12: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000UL) * ms); i++) {
      0082E8 90 5C            [ 1]  436 	incw	y
      0082EA 26 EF            [ 1]  437 	jrne	00110$
      0082EC 5C               [ 1]  438 	incw	x
      0082ED 20 EC            [ 2]  439 	jra	00110$
                                    440 ;	../../stm8/se8r01.c: 88: delay_ms(1);
      0082EF                        441 00108$:
                                    442 ;	../../stm8/se8r01.c: 89: status = se8r01_get_status();  
      0082EF CD 83 65         [ 4]  443 	call	_se8r01_get_status
                                    444 ;	../../stm8/se8r01.c: 90: if (status & STA_MARK_RX) {
      0082F2 A5 40            [ 1]  445 	bcp	a, #0x40
      0082F4 27 1B            [ 1]  446 	jreq	00105$
                                    447 ;	../../stm8/se8r01.c: 91: SPI_read_buf(RD_RX_PLOAD, rx_buf, TX_PLOAD_WIDTH);
      0082F6 4B 06            [ 1]  448 	push	#0x06
      0082F8 1E 04            [ 2]  449 	ldw	x, (0x04, sp)
      0082FA 89               [ 2]  450 	pushw	x
      0082FB 4B 61            [ 1]  451 	push	#0x61
      0082FD CD 81 D1         [ 4]  452 	call	_SPI_read_buf
      008300 5B 04            [ 2]  453 	addw	sp, #4
                                    454 ;	../../stm8/se8r01.c: 92: se8r01_flush_RX();
      008302 CD 87 9F         [ 4]  455 	call	_se8r01_flush_RX
                                    456 ;	../../stm8/se8r01.c: 93: SPI_write_read_reg(WRITE_REG|STATUS, 0xff);//  ,0xff);
      008305 4B FF            [ 1]  457 	push	#0xff
      008307 4B 27            [ 1]  458 	push	#0x27
      008309 CD 81 76         [ 4]  459 	call	_SPI_write_read_reg
      00830C 5B 02            [ 2]  460 	addw	sp, #2
                                    461 ;	../../stm8/se8r01.c: 94: return 1;
      00830E A6 01            [ 1]  462 	ld	a, #0x01
      008310 81               [ 4]  463 	ret
      008311                        464 00105$:
                                    465 ;	../../stm8/se8r01.c: 96: SPI_write_read_reg(WRITE_REG|STATUS, 0xff);
      008311 4B FF            [ 1]  466 	push	#0xff
      008313 4B 27            [ 1]  467 	push	#0x27
      008315 CD 81 76         [ 4]  468 	call	_SPI_write_read_reg
      008318 5B 02            [ 2]  469 	addw	sp, #2
                                    470 ;	../../stm8/se8r01.c: 97: return 0;
      00831A 4F               [ 1]  471 	clr	a
      00831B 81               [ 4]  472 	ret
                                    473 ;	../../stm8/se8r01.c: 104: void se8r01_tx(uint8_t *tx_buf) {
                                    474 ;	-----------------------------------------
                                    475 ;	 function se8r01_tx
                                    476 ;	-----------------------------------------
      00831C                        477 _se8r01_tx:
      00831C 88               [ 1]  478 	push	a
                                    479 ;	../../stm8/se8r01.c: 107: status = se8r01_get_status();
      00831D CD 83 65         [ 4]  480 	call	_se8r01_get_status
      008320 6B 01            [ 1]  481 	ld	(0x01, sp), a
                                    482 ;	../../stm8/se8r01.c: 109: PD_ODR |= (1<<4);
      008322 AE 50 0F         [ 2]  483 	ldw	x, #0x500f
      008325 F6               [ 1]  484 	ld	a, (x)
                                    485 ;	../../stm8/se8r01.c: 108: if (status & (1<<5)) {
      008326 88               [ 1]  486 	push	a
      008327 7B 02            [ 1]  487 	ld	a, (0x02, sp)
      008329 A5 20            [ 1]  488 	bcp	a, #0x20
      00832B 84               [ 1]  489 	pop	a
      00832C 27 08            [ 1]  490 	jreq	00102$
                                    491 ;	../../stm8/se8r01.c: 109: PD_ODR |= (1<<4);
      00832E AA 10            [ 1]  492 	or	a, #0x10
      008330 AE 50 0F         [ 2]  493 	ldw	x, #0x500f
      008333 F7               [ 1]  494 	ld	(x), a
      008334 20 06            [ 2]  495 	jra	00103$
      008336                        496 00102$:
                                    497 ;	../../stm8/se8r01.c: 111: PD_ODR &= ~(1<<4);
      008336 A4 EF            [ 1]  498 	and	a, #0xef
      008338 AE 50 0F         [ 2]  499 	ldw	x, #0x500f
      00833B F7               [ 1]  500 	ld	(x), a
      00833C                        501 00103$:
                                    502 ;	../../stm8/se8r01.c: 113: se8r01_flush_TX();
      00833C CD 87 95         [ 4]  503 	call	_se8r01_flush_TX
                                    504 ;	../../stm8/se8r01.c: 114: SPI_write_buf(WR_TX_PLOAD, tx_buf, TX_PLOAD_WIDTH);
      00833F 4B 06            [ 1]  505 	push	#0x06
      008341 1E 05            [ 2]  506 	ldw	x, (0x05, sp)
      008343 89               [ 2]  507 	pushw	x
      008344 4B A0            [ 1]  508 	push	#0xa0
      008346 CD 81 9B         [ 4]  509 	call	_SPI_write_buf
      008349 5B 04            [ 2]  510 	addw	sp, #4
                                    511 ;	../../stm8/se8r01.c: 115: SPI_write_read_reg(WRITE_REG+STATUS, 0xff);
      00834B 4B FF            [ 1]  512 	push	#0xff
      00834D 4B 27            [ 1]  513 	push	#0x27
      00834F CD 81 76         [ 4]  514 	call	_SPI_write_read_reg
      008352 5B 02            [ 2]  515 	addw	sp, #2
                                    516 ;	../../stm8/se8r01.c: 116: printf("Status: %02x \n", status);
      008354 5F               [ 1]  517 	clrw	x
      008355 7B 01            [ 1]  518 	ld	a, (0x01, sp)
      008357 97               [ 1]  519 	ld	xl, a
      008358 90 AE 87 BB      [ 2]  520 	ldw	y, #___str_1+0
      00835C 89               [ 2]  521 	pushw	x
      00835D 90 89            [ 2]  522 	pushw	y
      00835F CD 8A 50         [ 4]  523 	call	_printf
      008362 5B 05            [ 2]  524 	addw	sp, #5
      008364 81               [ 4]  525 	ret
                                    526 ;	../../stm8/se8r01.c: 119: uint8_t se8r01_get_status() {
                                    527 ;	-----------------------------------------
                                    528 ;	 function se8r01_get_status
                                    529 ;	-----------------------------------------
      008365                        530 _se8r01_get_status:
                                    531 ;	../../stm8/se8r01.c: 120: return SPI_write_read_reg(STATUS, 0);
      008365 4B 00            [ 1]  532 	push	#0x00
      008367 4B 07            [ 1]  533 	push	#0x07
      008369 CD 81 76         [ 4]  534 	call	_SPI_write_read_reg
      00836C 5B 02            [ 2]  535 	addw	sp, #2
      00836E 81               [ 4]  536 	ret
                                    537 ;	../../stm8/se8r01.c: 123: void init_io() {
                                    538 ;	-----------------------------------------
                                    539 ;	 function init_io
                                    540 ;	-----------------------------------------
      00836F                        541 _init_io:
                                    542 ;	../../stm8/se8r01.c: 125: PB_DDR &= ~(1<<IRQ_PIN); //Input
      00836F AE 50 07         [ 2]  543 	ldw	x, #0x5007
      008372 F6               [ 1]  544 	ld	a, (x)
      008373 A4 DF            [ 1]  545 	and	a, #0xdf
      008375 F7               [ 1]  546 	ld	(x), a
                                    547 ;	../../stm8/se8r01.c: 126: PB_CR1 &= ~(1<<IRQ_PIN); //No pull-up
      008376 AE 50 08         [ 2]  548 	ldw	x, #0x5008
      008379 F6               [ 1]  549 	ld	a, (x)
      00837A A4 DF            [ 1]  550 	and	a, #0xdf
      00837C F7               [ 1]  551 	ld	(x), a
                                    552 ;	../../stm8/se8r01.c: 127: PB_CR2 &= ~(1<<IRQ_PIN); //disable externernal interupt
      00837D AE 50 09         [ 2]  553 	ldw	x, #0x5009
      008380 F6               [ 1]  554 	ld	a, (x)
      008381 A4 DF            [ 1]  555 	and	a, #0xdf
      008383 F7               [ 1]  556 	ld	(x), a
                                    557 ;	../../stm8/se8r01.c: 130: PC_DDR |= (1<<CE_PIN); //output
      008384 AE 50 0C         [ 2]  558 	ldw	x, #0x500c
      008387 F6               [ 1]  559 	ld	a, (x)
      008388 AA 08            [ 1]  560 	or	a, #0x08
      00838A F7               [ 1]  561 	ld	(x), a
                                    562 ;	../../stm8/se8r01.c: 131: PC_CR1 |= (1<<CE_PIN); //push-pull
      00838B AE 50 0D         [ 2]  563 	ldw	x, #0x500d
      00838E F6               [ 1]  564 	ld	a, (x)
      00838F AA 08            [ 1]  565 	or	a, #0x08
      008391 F7               [ 1]  566 	ld	(x), a
                                    567 ;	../../stm8/se8r01.c: 132: PC_CR2 |= (1<<CE_PIN); //10Mhz speed
      008392 AE 50 0E         [ 2]  568 	ldw	x, #0x500e
      008395 F6               [ 1]  569 	ld	a, (x)
      008396 AA 08            [ 1]  570 	or	a, #0x08
      008398 F7               [ 1]  571 	ld	(x), a
                                    572 ;	../../stm8/se8r01.c: 135: PC_DDR |= (1<<CSN_PIN); //output
      008399 AE 50 0C         [ 2]  573 	ldw	x, #0x500c
      00839C F6               [ 1]  574 	ld	a, (x)
      00839D AA 10            [ 1]  575 	or	a, #0x10
      00839F F7               [ 1]  576 	ld	(x), a
                                    577 ;	../../stm8/se8r01.c: 136: PC_CR1 |= (1<<CSN_PIN); //push-pull
      0083A0 AE 50 0D         [ 2]  578 	ldw	x, #0x500d
      0083A3 F6               [ 1]  579 	ld	a, (x)
      0083A4 AA 10            [ 1]  580 	or	a, #0x10
      0083A6 F7               [ 1]  581 	ld	(x), a
                                    582 ;	../../stm8/se8r01.c: 137: PC_CR2 |= (1<<CSN_PIN); //10Mhz speed
      0083A7 AE 50 0E         [ 2]  583 	ldw	x, #0x500e
      0083AA F6               [ 1]  584 	ld	a, (x)
      0083AB AA 10            [ 1]  585 	or	a, #0x10
      0083AD F7               [ 1]  586 	ld	(x), a
                                    587 ;	../../stm8/se8r01.c: 140: PD_DDR |= (1<<4);
      0083AE AE 50 11         [ 2]  588 	ldw	x, #0x5011
      0083B1 F6               [ 1]  589 	ld	a, (x)
      0083B2 AA 10            [ 1]  590 	or	a, #0x10
      0083B4 F7               [ 1]  591 	ld	(x), a
                                    592 ;	../../stm8/se8r01.c: 141: PD_CR1 |= (1<<4);
      0083B5 AE 50 12         [ 2]  593 	ldw	x, #0x5012
      0083B8 F6               [ 1]  594 	ld	a, (x)
      0083B9 AA 10            [ 1]  595 	or	a, #0x10
      0083BB F7               [ 1]  596 	ld	(x), a
                                    597 ;	../../stm8/se8r01.c: 143: CSN_H(); //disable spi
      0083BC AE 50 0A         [ 2]  598 	ldw	x, #0x500a
      0083BF F6               [ 1]  599 	ld	a, (x)
      0083C0 AA 10            [ 1]  600 	or	a, #0x10
      0083C2 F7               [ 1]  601 	ld	(x), a
                                    602 ;	../../stm8/se8r01.c: 144: CE_L(); //power down at startup
      0083C3 AE 50 0A         [ 2]  603 	ldw	x, #0x500a
      0083C6 F6               [ 1]  604 	ld	a, (x)
      0083C7 A4 F7            [ 1]  605 	and	a, #0xf7
      0083C9 F7               [ 1]  606 	ld	(x), a
      0083CA 81               [ 4]  607 	ret
                                    608 ;	../../stm8/se8r01.c: 147: void clear_IRQ_flags() {
                                    609 ;	-----------------------------------------
                                    610 ;	 function clear_IRQ_flags
                                    611 ;	-----------------------------------------
      0083CB                        612 _clear_IRQ_flags:
                                    613 ;	../../stm8/se8r01.c: 150: status = se8r01_get_status();
      0083CB CD 83 65         [ 4]  614 	call	_se8r01_get_status
                                    615 ;	../../stm8/se8r01.c: 151: SPI_write_read_reg(STATUS, status|0x70);
      0083CE AA 70            [ 1]  616 	or	a, #0x70
      0083D0 88               [ 1]  617 	push	a
      0083D1 4B 07            [ 1]  618 	push	#0x07
      0083D3 CD 81 76         [ 4]  619 	call	_SPI_write_read_reg
      0083D6 5B 02            [ 2]  620 	addw	sp, #2
                                    621 ;	../../stm8/se8r01.c: 152: printf("clearing irq flag\n");
      0083D8 AE 87 FA         [ 2]  622 	ldw	x, #___str_5+0
      0083DB 89               [ 2]  623 	pushw	x
      0083DC CD 8A 50         [ 4]  624 	call	_printf
      0083DF 5B 02            [ 2]  625 	addw	sp, #2
      0083E1 81               [ 4]  626 	ret
                                    627 ;	../../stm8/se8r01.c: 155: void rf_switch_bank(uint8_t bankindex)
                                    628 ;	-----------------------------------------
                                    629 ;	 function rf_switch_bank
                                    630 ;	-----------------------------------------
      0083E2                        631 _rf_switch_bank:
      0083E2 52 02            [ 2]  632 	sub	sp, #2
                                    633 ;	../../stm8/se8r01.c: 159: temp0 = SPI_write_read_bit(iRF_BANK0_STATUS);
      0083E4 4B 07            [ 1]  634 	push	#0x07
      0083E6 CD 89 24         [ 4]  635 	call	_SPI_write_read_bit
      0083E9 5B 01            [ 2]  636 	addw	sp, #1
                                    637 ;	../../stm8/se8r01.c: 160: printf("Temp 0: %02x \n", temp0);
      0083EB 6B 02            [ 1]  638 	ld	(0x02, sp), a
      0083ED 0F 01            [ 1]  639 	clr	(0x01, sp)
      0083EF AE 88 0D         [ 2]  640 	ldw	x, #___str_6+0
      0083F2 88               [ 1]  641 	push	a
      0083F3 16 02            [ 2]  642 	ldw	y, (0x02, sp)
      0083F5 90 89            [ 2]  643 	pushw	y
      0083F7 89               [ 2]  644 	pushw	x
      0083F8 CD 8A 50         [ 4]  645 	call	_printf
      0083FB 5B 04            [ 2]  646 	addw	sp, #4
      0083FD 84               [ 1]  647 	pop	a
                                    648 ;	../../stm8/se8r01.c: 161: if((temp0 & 0x80) != bankindex)
      0083FE A4 80            [ 1]  649 	and	a, #0x80
      008400 11 05            [ 1]  650 	cp	a, (0x05, sp)
      008402 27 09            [ 1]  651 	jreq	00103$
                                    652 ;	../../stm8/se8r01.c: 163: SPI_write_read_reg(iRF_CMD_ACTIVATE,0x53);
      008404 4B 53            [ 1]  653 	push	#0x53
      008406 4B 50            [ 1]  654 	push	#0x50
      008408 CD 81 76         [ 4]  655 	call	_SPI_write_read_reg
      00840B 5B 02            [ 2]  656 	addw	sp, #2
      00840D                        657 00103$:
      00840D 5B 02            [ 2]  658 	addw	sp, #2
      00840F 81               [ 4]  659 	ret
                                    660 ;	../../stm8/se8r01.c: 167: void se8r01_powerup()
                                    661 ;	-----------------------------------------
                                    662 ;	 function se8r01_powerup
                                    663 ;	-----------------------------------------
      008410                        664 _se8r01_powerup:
                                    665 ;	../../stm8/se8r01.c: 169: rf_switch_bank(iBANK0);
      008410 4B 00            [ 1]  666 	push	#0x00
      008412 CD 83 E2         [ 4]  667 	call	_rf_switch_bank
      008415 84               [ 1]  668 	pop	a
                                    669 ;	../../stm8/se8r01.c: 170: SPI_write_read_reg(iRF_CMD_WRITE_REG|iRF_BANK0_CONFIG,0x03);
      008416 4B 03            [ 1]  670 	push	#0x03
      008418 4B 20            [ 1]  671 	push	#0x20
      00841A CD 81 76         [ 4]  672 	call	_SPI_write_read_reg
      00841D 5B 02            [ 2]  673 	addw	sp, #2
                                    674 ;	../../stm8/se8r01.c: 171: SPI_write_read_reg(iRF_CMD_WRITE_REG|iRF_BANK0_RF_CH,0x32);
      00841F 4B 32            [ 1]  675 	push	#0x32
      008421 4B 25            [ 1]  676 	push	#0x25
      008423 CD 81 76         [ 4]  677 	call	_SPI_write_read_reg
      008426 5B 02            [ 2]  678 	addw	sp, #2
                                    679 ;	../../stm8/se8r01.c: 172: SPI_write_read_reg(iRF_CMD_WRITE_REG|iRF_BANK0_RF_SETUP,0x48);
      008428 4B 48            [ 1]  680 	push	#0x48
      00842A 4B 26            [ 1]  681 	push	#0x26
      00842C CD 81 76         [ 4]  682 	call	_SPI_write_read_reg
      00842F 5B 02            [ 2]  683 	addw	sp, #2
                                    684 ;	../../stm8/se8r01.c: 173: SPI_write_read_reg(iRF_CMD_WRITE_REG|iRF_BANK0_PRE_GURD,0x77); //2450 calibration
      008431 4B 77            [ 1]  685 	push	#0x77
      008433 4B 3F            [ 1]  686 	push	#0x3f
      008435 CD 81 76         [ 4]  687 	call	_SPI_write_read_reg
      008438 5B 02            [ 2]  688 	addw	sp, #2
      00843A 81               [ 4]  689 	ret
                                    690 ;	../../stm8/se8r01.c: 177: void se8r01_calibration()
                                    691 ;	-----------------------------------------
                                    692 ;	 function se8r01_calibration
                                    693 ;	-----------------------------------------
      00843B                        694 _se8r01_calibration:
      00843B 52 11            [ 2]  695 	sub	sp, #17
                                    696 ;	../../stm8/se8r01.c: 182: rf_switch_bank(iBANK1);
      00843D 4B 80            [ 1]  697 	push	#0x80
      00843F CD 83 E2         [ 4]  698 	call	_rf_switch_bank
      008442 84               [ 1]  699 	pop	a
                                    700 ;	../../stm8/se8r01.c: 184: gtemp[0]=0x40;
      008443 96               [ 1]  701 	ldw	x, sp
      008444 1C 00 05         [ 2]  702 	addw	x, #5
      008447 1F 0A            [ 2]  703 	ldw	(0x0a, sp), x
      008449 A6 40            [ 1]  704 	ld	a, #0x40
      00844B F7               [ 1]  705 	ld	(x), a
                                    706 ;	../../stm8/se8r01.c: 185: gtemp[1]=0x00;
      00844C 1E 0A            [ 2]  707 	ldw	x, (0x0a, sp)
      00844E 5C               [ 1]  708 	incw	x
      00844F 1F 0C            [ 2]  709 	ldw	(0x0c, sp), x
      008451 7F               [ 1]  710 	clr	(x)
                                    711 ;	../../stm8/se8r01.c: 186: gtemp[2]=0x10;
      008452 1E 0A            [ 2]  712 	ldw	x, (0x0a, sp)
      008454 5C               [ 1]  713 	incw	x
      008455 5C               [ 1]  714 	incw	x
      008456 1F 10            [ 2]  715 	ldw	(0x10, sp), x
      008458 A6 10            [ 1]  716 	ld	a, #0x10
      00845A F7               [ 1]  717 	ld	(x), a
                                    718 ;	../../stm8/se8r01.c: 187: gtemp[3]=0xE6;
      00845B 1E 0A            [ 2]  719 	ldw	x, (0x0a, sp)
      00845D 1C 00 03         [ 2]  720 	addw	x, #0x0003
      008460 1F 0E            [ 2]  721 	ldw	(0x0e, sp), x
      008462 A6 E6            [ 1]  722 	ld	a, #0xe6
      008464 F7               [ 1]  723 	ld	(x), a
                                    724 ;	../../stm8/se8r01.c: 188: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_PLL_CTL0, gtemp, 4);
      008465 1E 0A            [ 2]  725 	ldw	x, (0x0a, sp)
      008467 4B 04            [ 1]  726 	push	#0x04
      008469 89               [ 2]  727 	pushw	x
      00846A 4B 21            [ 1]  728 	push	#0x21
      00846C CD 81 9B         [ 4]  729 	call	_SPI_write_buf
      00846F 5B 04            [ 2]  730 	addw	sp, #4
                                    731 ;	../../stm8/se8r01.c: 190: gtemp[0]=0x20;
      008471 1E 0A            [ 2]  732 	ldw	x, (0x0a, sp)
      008473 A6 20            [ 1]  733 	ld	a, #0x20
      008475 F7               [ 1]  734 	ld	(x), a
                                    735 ;	../../stm8/se8r01.c: 191: gtemp[1]=0x08;
      008476 1E 0C            [ 2]  736 	ldw	x, (0x0c, sp)
      008478 A6 08            [ 1]  737 	ld	a, #0x08
      00847A F7               [ 1]  738 	ld	(x), a
                                    739 ;	../../stm8/se8r01.c: 192: gtemp[2]=0x50;
      00847B 1E 10            [ 2]  740 	ldw	x, (0x10, sp)
      00847D A6 50            [ 1]  741 	ld	a, #0x50
      00847F F7               [ 1]  742 	ld	(x), a
                                    743 ;	../../stm8/se8r01.c: 193: gtemp[3]=0x40;
      008480 1E 0E            [ 2]  744 	ldw	x, (0x0e, sp)
      008482 A6 40            [ 1]  745 	ld	a, #0x40
      008484 F7               [ 1]  746 	ld	(x), a
                                    747 ;	../../stm8/se8r01.c: 194: gtemp[4]=0x50;
      008485 1E 0A            [ 2]  748 	ldw	x, (0x0a, sp)
      008487 A6 50            [ 1]  749 	ld	a, #0x50
      008489 E7 04            [ 1]  750 	ld	(0x0004, x), a
                                    751 ;	../../stm8/se8r01.c: 195: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_CAL_CTL, gtemp, 5);
      00848B 1E 0A            [ 2]  752 	ldw	x, (0x0a, sp)
      00848D 4B 05            [ 1]  753 	push	#0x05
      00848F 89               [ 2]  754 	pushw	x
      008490 4B 23            [ 1]  755 	push	#0x23
      008492 CD 81 9B         [ 4]  756 	call	_SPI_write_buf
      008495 5B 04            [ 2]  757 	addw	sp, #4
                                    758 ;	../../stm8/se8r01.c: 197: gtemp[0]=0x00;
      008497 1E 0A            [ 2]  759 	ldw	x, (0x0a, sp)
      008499 7F               [ 1]  760 	clr	(x)
                                    761 ;	../../stm8/se8r01.c: 198: gtemp[1]=0x00;
      00849A 1E 0C            [ 2]  762 	ldw	x, (0x0c, sp)
      00849C 7F               [ 1]  763 	clr	(x)
                                    764 ;	../../stm8/se8r01.c: 199: gtemp[2]=0x1E;
      00849D 1E 10            [ 2]  765 	ldw	x, (0x10, sp)
      00849F A6 1E            [ 1]  766 	ld	a, #0x1e
      0084A1 F7               [ 1]  767 	ld	(x), a
                                    768 ;	../../stm8/se8r01.c: 200: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_IF_FREQ, gtemp, 3);
      0084A2 1E 0A            [ 2]  769 	ldw	x, (0x0a, sp)
      0084A4 4B 03            [ 1]  770 	push	#0x03
      0084A6 89               [ 2]  771 	pushw	x
      0084A7 4B 2A            [ 1]  772 	push	#0x2a
      0084A9 CD 81 9B         [ 4]  773 	call	_SPI_write_buf
      0084AC 5B 04            [ 2]  774 	addw	sp, #4
                                    775 ;	../../stm8/se8r01.c: 202: gtemp[0]=0x29;
      0084AE 1E 0A            [ 2]  776 	ldw	x, (0x0a, sp)
      0084B0 A6 29            [ 1]  777 	ld	a, #0x29
      0084B2 F7               [ 1]  778 	ld	(x), a
                                    779 ;	../../stm8/se8r01.c: 203: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_FDEV, gtemp, 1);
      0084B3 1E 0A            [ 2]  780 	ldw	x, (0x0a, sp)
      0084B5 4B 01            [ 1]  781 	push	#0x01
      0084B7 89               [ 2]  782 	pushw	x
      0084B8 4B 2C            [ 1]  783 	push	#0x2c
      0084BA CD 81 9B         [ 4]  784 	call	_SPI_write_buf
      0084BD 5B 04            [ 2]  785 	addw	sp, #4
                                    786 ;	../../stm8/se8r01.c: 205: gtemp[0]=0x00;
      0084BF 1E 0A            [ 2]  787 	ldw	x, (0x0a, sp)
      0084C1 7F               [ 1]  788 	clr	(x)
                                    789 ;	../../stm8/se8r01.c: 206: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_DAC_CAL_LOW, gtemp, 1);
      0084C2 1E 0A            [ 2]  790 	ldw	x, (0x0a, sp)
      0084C4 4B 01            [ 1]  791 	push	#0x01
      0084C6 89               [ 2]  792 	pushw	x
      0084C7 4B 37            [ 1]  793 	push	#0x37
      0084C9 CD 81 9B         [ 4]  794 	call	_SPI_write_buf
      0084CC 5B 04            [ 2]  795 	addw	sp, #4
                                    796 ;	../../stm8/se8r01.c: 208: gtemp[0]=0x7F;
      0084CE 1E 0A            [ 2]  797 	ldw	x, (0x0a, sp)
      0084D0 A6 7F            [ 1]  798 	ld	a, #0x7f
      0084D2 F7               [ 1]  799 	ld	(x), a
                                    800 ;	../../stm8/se8r01.c: 209: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_DAC_CAL_HI, gtemp, 1);
      0084D3 1E 0A            [ 2]  801 	ldw	x, (0x0a, sp)
      0084D5 4B 01            [ 1]  802 	push	#0x01
      0084D7 89               [ 2]  803 	pushw	x
      0084D8 4B 38            [ 1]  804 	push	#0x38
      0084DA CD 81 9B         [ 4]  805 	call	_SPI_write_buf
      0084DD 5B 04            [ 2]  806 	addw	sp, #4
                                    807 ;	../../stm8/se8r01.c: 211: gtemp[0]=0x02;
      0084DF 1E 0A            [ 2]  808 	ldw	x, (0x0a, sp)
      0084E1 A6 02            [ 1]  809 	ld	a, #0x02
      0084E3 F7               [ 1]  810 	ld	(x), a
                                    811 ;	../../stm8/se8r01.c: 212: gtemp[1]=0xC1;
      0084E4 1E 0C            [ 2]  812 	ldw	x, (0x0c, sp)
      0084E6 A6 C1            [ 1]  813 	ld	a, #0xc1
      0084E8 F7               [ 1]  814 	ld	(x), a
                                    815 ;	../../stm8/se8r01.c: 213: gtemp[2]=0xEB;
      0084E9 1E 10            [ 2]  816 	ldw	x, (0x10, sp)
      0084EB A6 EB            [ 1]  817 	ld	a, #0xeb
      0084ED F7               [ 1]  818 	ld	(x), a
                                    819 ;	../../stm8/se8r01.c: 214: gtemp[3]=0x1C;
      0084EE 1E 0E            [ 2]  820 	ldw	x, (0x0e, sp)
      0084F0 A6 1C            [ 1]  821 	ld	a, #0x1c
      0084F2 F7               [ 1]  822 	ld	(x), a
                                    823 ;	../../stm8/se8r01.c: 215: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_AGC_GAIN, gtemp, 4);
      0084F3 1E 0A            [ 2]  824 	ldw	x, (0x0a, sp)
      0084F5 4B 04            [ 1]  825 	push	#0x04
      0084F7 89               [ 2]  826 	pushw	x
      0084F8 4B 3D            [ 1]  827 	push	#0x3d
      0084FA CD 81 9B         [ 4]  828 	call	_SPI_write_buf
      0084FD 5B 04            [ 2]  829 	addw	sp, #4
                                    830 ;	../../stm8/se8r01.c: 217: gtemp[0]=0x97;
      0084FF 1E 0A            [ 2]  831 	ldw	x, (0x0a, sp)
      008501 A6 97            [ 1]  832 	ld	a, #0x97
      008503 F7               [ 1]  833 	ld	(x), a
                                    834 ;	../../stm8/se8r01.c: 218: gtemp[1]=0x64;
      008504 1E 0C            [ 2]  835 	ldw	x, (0x0c, sp)
      008506 A6 64            [ 1]  836 	ld	a, #0x64
      008508 F7               [ 1]  837 	ld	(x), a
                                    838 ;	../../stm8/se8r01.c: 219: gtemp[2]=0x00;
      008509 1E 10            [ 2]  839 	ldw	x, (0x10, sp)
      00850B 7F               [ 1]  840 	clr	(x)
                                    841 ;	../../stm8/se8r01.c: 220: gtemp[3]=0x81;
      00850C 1E 0E            [ 2]  842 	ldw	x, (0x0e, sp)
      00850E A6 81            [ 1]  843 	ld	a, #0x81
      008510 F7               [ 1]  844 	ld	(x), a
                                    845 ;	../../stm8/se8r01.c: 221: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_RF_IVGEN, gtemp, 4);
      008511 1E 0A            [ 2]  846 	ldw	x, (0x0a, sp)
      008513 4B 04            [ 1]  847 	push	#0x04
      008515 89               [ 2]  848 	pushw	x
      008516 4B 3E            [ 1]  849 	push	#0x3e
      008518 CD 81 9B         [ 4]  850 	call	_SPI_write_buf
      00851B 5B 04            [ 2]  851 	addw	sp, #4
                                    852 ;	../../stm8/se8r01.c: 223: rf_switch_bank(iBANK0);
      00851D 4B 00            [ 1]  853 	push	#0x00
      00851F CD 83 E2         [ 4]  854 	call	_rf_switch_bank
      008522 84               [ 1]  855 	pop	a
                                    856 ;	../../stm8/se8r01.c: 225: CE_H();
      008523 AE 50 0A         [ 2]  857 	ldw	x, #0x500a
      008526 F6               [ 1]  858 	ld	a, (x)
      008527 AA 08            [ 1]  859 	or	a, #0x08
      008529 F7               [ 1]  860 	ld	(x), a
                                    861 ;	../../stm8/delay.h: 18: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000000UL) * us); i++) {
      00852A 5F               [ 1]  862 	clrw	x
      00852B 4F               [ 1]  863 	clr	a
      00852C 0F 01            [ 1]  864 	clr	(0x01, sp)
      00852E                        865 00110$:
      00852E 88               [ 1]  866 	push	a
      00852F A3 00 00         [ 2]  867 	cpw	x, #0x0000
      008532 7B 01            [ 1]  868 	ld	a, (1, sp)
      008534 A2 00            [ 1]  869 	sbc	a, #0x00
      008536 7B 02            [ 1]  870 	ld	a, (0x02, sp)
      008538 A2 00            [ 1]  871 	sbc	a, #0x00
      00853A 84               [ 1]  872 	pop	a
      00853B 24 12            [ 1]  873 	jrnc	00102$
                                    874 ;	../../stm8/delay.h: 19: __asm__("nop");
      00853D 9D               [ 1]  875 	nop
                                    876 ;	../../stm8/delay.h: 18: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000000UL) * us); i++) {
      00853E 1C 00 01         [ 2]  877 	addw	x, #0x0001
      008541 A9 00            [ 1]  878 	adc	a, #0x00
      008543 90 97            [ 1]  879 	ld	yl, a
      008545 7B 01            [ 1]  880 	ld	a, (0x01, sp)
      008547 A9 00            [ 1]  881 	adc	a, #0x00
      008549 6B 01            [ 1]  882 	ld	(0x01, sp), a
      00854B 90 9F            [ 1]  883 	ld	a, yl
      00854D 20 DF            [ 2]  884 	jra	00110$
                                    885 ;	../../stm8/se8r01.c: 226: delay_us(30);
      00854F                        886 00102$:
                                    887 ;	../../stm8/se8r01.c: 227: CE_L();
      00854F AE 50 0A         [ 2]  888 	ldw	x, #0x500a
      008552 F6               [ 1]  889 	ld	a, (x)
      008553 A4 F7            [ 1]  890 	and	a, #0xf7
      008555 F7               [ 1]  891 	ld	(x), a
                                    892 ;	../../stm8/delay.h: 18: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000000UL) * us); i++) {
      008556 5F               [ 1]  893 	clrw	x
      008557 1F 03            [ 2]  894 	ldw	(0x03, sp), x
      008559 1F 01            [ 2]  895 	ldw	(0x01, sp), x
      00855B                        896 00113$:
      00855B 1E 03            [ 2]  897 	ldw	x, (0x03, sp)
      00855D A3 00 00         [ 2]  898 	cpw	x, #0x0000
      008560 7B 02            [ 1]  899 	ld	a, (0x02, sp)
      008562 A2 00            [ 1]  900 	sbc	a, #0x00
      008564 7B 01            [ 1]  901 	ld	a, (0x01, sp)
      008566 A2 00            [ 1]  902 	sbc	a, #0x00
      008568 24 17            [ 1]  903 	jrnc	00104$
                                    904 ;	../../stm8/delay.h: 19: __asm__("nop");
      00856A 9D               [ 1]  905 	nop
                                    906 ;	../../stm8/delay.h: 18: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000000UL) * us); i++) {
      00856B 16 03            [ 2]  907 	ldw	y, (0x03, sp)
      00856D 72 A9 00 01      [ 2]  908 	addw	y, #0x0001
      008571 7B 02            [ 1]  909 	ld	a, (0x02, sp)
      008573 A9 00            [ 1]  910 	adc	a, #0x00
      008575 97               [ 1]  911 	ld	xl, a
      008576 7B 01            [ 1]  912 	ld	a, (0x01, sp)
      008578 A9 00            [ 1]  913 	adc	a, #0x00
      00857A 95               [ 1]  914 	ld	xh, a
      00857B 17 03            [ 2]  915 	ldw	(0x03, sp), y
      00857D 1F 01            [ 2]  916 	ldw	(0x01, sp), x
      00857F 20 DA            [ 2]  917 	jra	00113$
                                    918 ;	../../stm8/se8r01.c: 229: delay_us(50);                            // delay 50ms waiting for calibaration.
      008581                        919 00104$:
                                    920 ;	../../stm8/se8r01.c: 231: CE_H();
      008581 AE 50 0A         [ 2]  921 	ldw	x, #0x500a
      008584 F6               [ 1]  922 	ld	a, (x)
      008585 AA 08            [ 1]  923 	or	a, #0x08
      008587 F7               [ 1]  924 	ld	(x), a
                                    925 ;	../../stm8/delay.h: 18: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000000UL) * us); i++) {
      008588 5F               [ 1]  926 	clrw	x
      008589 1F 03            [ 2]  927 	ldw	(0x03, sp), x
      00858B 1F 01            [ 2]  928 	ldw	(0x01, sp), x
      00858D                        929 00116$:
      00858D 1E 03            [ 2]  930 	ldw	x, (0x03, sp)
      00858F A3 00 00         [ 2]  931 	cpw	x, #0x0000
      008592 7B 02            [ 1]  932 	ld	a, (0x02, sp)
      008594 A2 00            [ 1]  933 	sbc	a, #0x00
      008596 7B 01            [ 1]  934 	ld	a, (0x01, sp)
      008598 A2 00            [ 1]  935 	sbc	a, #0x00
      00859A 24 17            [ 1]  936 	jrnc	00106$
                                    937 ;	../../stm8/delay.h: 19: __asm__("nop");
      00859C 9D               [ 1]  938 	nop
                                    939 ;	../../stm8/delay.h: 18: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000000UL) * us); i++) {
      00859D 16 03            [ 2]  940 	ldw	y, (0x03, sp)
      00859F 72 A9 00 01      [ 2]  941 	addw	y, #0x0001
      0085A3 7B 02            [ 1]  942 	ld	a, (0x02, sp)
      0085A5 A9 00            [ 1]  943 	adc	a, #0x00
      0085A7 97               [ 1]  944 	ld	xl, a
      0085A8 7B 01            [ 1]  945 	ld	a, (0x01, sp)
      0085AA A9 00            [ 1]  946 	adc	a, #0x00
      0085AC 95               [ 1]  947 	ld	xh, a
      0085AD 17 03            [ 2]  948 	ldw	(0x03, sp), y
      0085AF 1F 01            [ 2]  949 	ldw	(0x01, sp), x
      0085B1 20 DA            [ 2]  950 	jra	00116$
                                    951 ;	../../stm8/se8r01.c: 232: delay_us(30);
      0085B3                        952 00106$:
                                    953 ;	../../stm8/se8r01.c: 233: CE_L();
      0085B3 AE 50 0A         [ 2]  954 	ldw	x, #0x500a
      0085B6 F6               [ 1]  955 	ld	a, (x)
      0085B7 A4 F7            [ 1]  956 	and	a, #0xf7
      0085B9 F7               [ 1]  957 	ld	(x), a
                                    958 ;	../../stm8/delay.h: 18: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000000UL) * us); i++) {
      0085BA 90 5F            [ 1]  959 	clrw	y
      0085BC 5F               [ 1]  960 	clrw	x
      0085BD                        961 00119$:
      0085BD 90 A3 00 00      [ 2]  962 	cpw	y, #0x0000
      0085C1 9F               [ 1]  963 	ld	a, xl
      0085C2 A2 00            [ 1]  964 	sbc	a, #0x00
      0085C4 9E               [ 1]  965 	ld	a, xh
      0085C5 A2 00            [ 1]  966 	sbc	a, #0x00
      0085C7 24 08            [ 1]  967 	jrnc	00121$
                                    968 ;	../../stm8/delay.h: 19: __asm__("nop");
      0085C9 9D               [ 1]  969 	nop
                                    970 ;	../../stm8/delay.h: 18: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000000UL) * us); i++) {
      0085CA 90 5C            [ 1]  971 	incw	y
      0085CC 26 EF            [ 1]  972 	jrne	00119$
      0085CE 5C               [ 1]  973 	incw	x
      0085CF 20 EC            [ 2]  974 	jra	00119$
                                    975 ;	../../stm8/se8r01.c: 235: delay_us(50);                            // delay 50ms waiting for calibaration.
      0085D1                        976 00121$:
      0085D1 5B 11            [ 2]  977 	addw	sp, #17
      0085D3 81               [ 4]  978 	ret
                                    979 ;	../../stm8/se8r01.c: 240: void se8r01_setup()
                                    980 ;	-----------------------------------------
                                    981 ;	 function se8r01_setup
                                    982 ;	-----------------------------------------
      0085D4                        983 _se8r01_setup:
      0085D4 52 0F            [ 2]  984 	sub	sp, #15
                                    985 ;	../../stm8/se8r01.c: 244: gtemp[0]=0x28;
      0085D6 96               [ 1]  986 	ldw	x, sp
      0085D7 5C               [ 1]  987 	incw	x
      0085D8 1F 0E            [ 2]  988 	ldw	(0x0e, sp), x
      0085DA A6 28            [ 1]  989 	ld	a, #0x28
      0085DC F7               [ 1]  990 	ld	(x), a
                                    991 ;	../../stm8/se8r01.c: 245: gtemp[1]=0x32;
      0085DD 1E 0E            [ 2]  992 	ldw	x, (0x0e, sp)
      0085DF 5C               [ 1]  993 	incw	x
      0085E0 1F 0C            [ 2]  994 	ldw	(0x0c, sp), x
      0085E2 A6 32            [ 1]  995 	ld	a, #0x32
      0085E4 F7               [ 1]  996 	ld	(x), a
                                    997 ;	../../stm8/se8r01.c: 246: gtemp[2]=0x80;
      0085E5 1E 0E            [ 2]  998 	ldw	x, (0x0e, sp)
      0085E7 5C               [ 1]  999 	incw	x
      0085E8 5C               [ 1] 1000 	incw	x
      0085E9 1F 0A            [ 2] 1001 	ldw	(0x0a, sp), x
      0085EB A6 80            [ 1] 1002 	ld	a, #0x80
      0085ED F7               [ 1] 1003 	ld	(x), a
                                   1004 ;	../../stm8/se8r01.c: 247: gtemp[3]=0x90;
      0085EE 1E 0E            [ 2] 1005 	ldw	x, (0x0e, sp)
      0085F0 1C 00 03         [ 2] 1006 	addw	x, #0x0003
      0085F3 1F 08            [ 2] 1007 	ldw	(0x08, sp), x
      0085F5 A6 90            [ 1] 1008 	ld	a, #0x90
      0085F7 F7               [ 1] 1009 	ld	(x), a
                                   1010 ;	../../stm8/se8r01.c: 248: gtemp[4]=0x00;
      0085F8 1E 0E            [ 2] 1011 	ldw	x, (0x0e, sp)
      0085FA 1C 00 04         [ 2] 1012 	addw	x, #0x0004
      0085FD 1F 06            [ 2] 1013 	ldw	(0x06, sp), x
      0085FF 7F               [ 1] 1014 	clr	(x)
                                   1015 ;	../../stm8/se8r01.c: 249: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK0_SETUP_VALUE, gtemp, 5);
      008600 1E 0E            [ 2] 1016 	ldw	x, (0x0e, sp)
      008602 4B 05            [ 1] 1017 	push	#0x05
      008604 89               [ 2] 1018 	pushw	x
      008605 4B 3E            [ 1] 1019 	push	#0x3e
      008607 CD 81 9B         [ 4] 1020 	call	_SPI_write_buf
      00860A 5B 04            [ 2] 1021 	addw	sp, #4
                                   1022 ;	../../stm8/delay.h: 18: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000000UL) * us); i++) {
      00860C 90 5F            [ 1] 1023 	clrw	y
      00860E 5F               [ 1] 1024 	clrw	x
      00860F                       1025 00104$:
      00860F 90 A3 00 00      [ 2] 1026 	cpw	y, #0x0000
      008613 9F               [ 1] 1027 	ld	a, xl
      008614 A2 00            [ 1] 1028 	sbc	a, #0x00
      008616 9E               [ 1] 1029 	ld	a, xh
      008617 A2 00            [ 1] 1030 	sbc	a, #0x00
      008619 24 08            [ 1] 1031 	jrnc	00102$
                                   1032 ;	../../stm8/delay.h: 19: __asm__("nop");
      00861B 9D               [ 1] 1033 	nop
                                   1034 ;	../../stm8/delay.h: 18: for (uint32_t i = 0; i < ((F_CPU / 18 / 1000000UL) * us); i++) {
      00861C 90 5C            [ 1] 1035 	incw	y
      00861E 26 EF            [ 1] 1036 	jrne	00104$
      008620 5C               [ 1] 1037 	incw	x
      008621 20 EC            [ 2] 1038 	jra	00104$
                                   1039 ;	../../stm8/se8r01.c: 251: delay_us(2);
      008623                       1040 00102$:
                                   1041 ;	../../stm8/se8r01.c: 253: rf_switch_bank(iBANK1);
      008623 4B 80            [ 1] 1042 	push	#0x80
      008625 CD 83 E2         [ 4] 1043 	call	_rf_switch_bank
      008628 84               [ 1] 1044 	pop	a
                                   1045 ;	../../stm8/se8r01.c: 255: gtemp[0]=0x40;
      008629 1E 0E            [ 2] 1046 	ldw	x, (0x0e, sp)
      00862B A6 40            [ 1] 1047 	ld	a, #0x40
      00862D F7               [ 1] 1048 	ld	(x), a
                                   1049 ;	../../stm8/se8r01.c: 256: gtemp[1]=0x01;
      00862E 1E 0C            [ 2] 1050 	ldw	x, (0x0c, sp)
      008630 A6 01            [ 1] 1051 	ld	a, #0x01
      008632 F7               [ 1] 1052 	ld	(x), a
                                   1053 ;	../../stm8/se8r01.c: 257: gtemp[2]=0x30;
      008633 1E 0A            [ 2] 1054 	ldw	x, (0x0a, sp)
      008635 A6 30            [ 1] 1055 	ld	a, #0x30
      008637 F7               [ 1] 1056 	ld	(x), a
                                   1057 ;	../../stm8/se8r01.c: 258: gtemp[3]=0xE2;
      008638 1E 08            [ 2] 1058 	ldw	x, (0x08, sp)
      00863A A6 E2            [ 1] 1059 	ld	a, #0xe2
      00863C F7               [ 1] 1060 	ld	(x), a
                                   1061 ;	../../stm8/se8r01.c: 259: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_PLL_CTL0, gtemp, 4);
      00863D 1E 0E            [ 2] 1062 	ldw	x, (0x0e, sp)
      00863F 4B 04            [ 1] 1063 	push	#0x04
      008641 89               [ 2] 1064 	pushw	x
      008642 4B 21            [ 1] 1065 	push	#0x21
      008644 CD 81 9B         [ 4] 1066 	call	_SPI_write_buf
      008647 5B 04            [ 2] 1067 	addw	sp, #4
                                   1068 ;	../../stm8/se8r01.c: 261: gtemp[0]=0x29;
      008649 1E 0E            [ 2] 1069 	ldw	x, (0x0e, sp)
      00864B A6 29            [ 1] 1070 	ld	a, #0x29
      00864D F7               [ 1] 1071 	ld	(x), a
                                   1072 ;	../../stm8/se8r01.c: 262: gtemp[1]=0x89;
      00864E 1E 0C            [ 2] 1073 	ldw	x, (0x0c, sp)
      008650 A6 89            [ 1] 1074 	ld	a, #0x89
      008652 F7               [ 1] 1075 	ld	(x), a
                                   1076 ;	../../stm8/se8r01.c: 263: gtemp[2]=0x55;
      008653 1E 0A            [ 2] 1077 	ldw	x, (0x0a, sp)
      008655 A6 55            [ 1] 1078 	ld	a, #0x55
      008657 F7               [ 1] 1079 	ld	(x), a
                                   1080 ;	../../stm8/se8r01.c: 264: gtemp[3]=0x40;
      008658 1E 08            [ 2] 1081 	ldw	x, (0x08, sp)
      00865A A6 40            [ 1] 1082 	ld	a, #0x40
      00865C F7               [ 1] 1083 	ld	(x), a
                                   1084 ;	../../stm8/se8r01.c: 265: gtemp[4]=0x50;
      00865D 1E 06            [ 2] 1085 	ldw	x, (0x06, sp)
      00865F A6 50            [ 1] 1086 	ld	a, #0x50
      008661 F7               [ 1] 1087 	ld	(x), a
                                   1088 ;	../../stm8/se8r01.c: 266: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_CAL_CTL, gtemp, 5);
      008662 1E 0E            [ 2] 1089 	ldw	x, (0x0e, sp)
      008664 4B 05            [ 1] 1090 	push	#0x05
      008666 89               [ 2] 1091 	pushw	x
      008667 4B 23            [ 1] 1092 	push	#0x23
      008669 CD 81 9B         [ 4] 1093 	call	_SPI_write_buf
      00866C 5B 04            [ 2] 1094 	addw	sp, #4
                                   1095 ;	../../stm8/se8r01.c: 268: gtemp[0]=0x29;
      00866E 1E 0E            [ 2] 1096 	ldw	x, (0x0e, sp)
      008670 A6 29            [ 1] 1097 	ld	a, #0x29
      008672 F7               [ 1] 1098 	ld	(x), a
                                   1099 ;	../../stm8/se8r01.c: 269: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_FDEV, gtemp, 1);
      008673 1E 0E            [ 2] 1100 	ldw	x, (0x0e, sp)
      008675 4B 01            [ 1] 1101 	push	#0x01
      008677 89               [ 2] 1102 	pushw	x
      008678 4B 2C            [ 1] 1103 	push	#0x2c
      00867A CD 81 9B         [ 4] 1104 	call	_SPI_write_buf
      00867D 5B 04            [ 2] 1105 	addw	sp, #4
                                   1106 ;	../../stm8/se8r01.c: 271: gtemp[0]=0x55;
      00867F 1E 0E            [ 2] 1107 	ldw	x, (0x0e, sp)
      008681 A6 55            [ 1] 1108 	ld	a, #0x55
      008683 F7               [ 1] 1109 	ld	(x), a
                                   1110 ;	../../stm8/se8r01.c: 272: gtemp[1]=0xC2;
      008684 1E 0C            [ 2] 1111 	ldw	x, (0x0c, sp)
      008686 A6 C2            [ 1] 1112 	ld	a, #0xc2
      008688 F7               [ 1] 1113 	ld	(x), a
                                   1114 ;	../../stm8/se8r01.c: 273: gtemp[2]=0x09;
      008689 1E 0A            [ 2] 1115 	ldw	x, (0x0a, sp)
      00868B A6 09            [ 1] 1116 	ld	a, #0x09
      00868D F7               [ 1] 1117 	ld	(x), a
                                   1118 ;	../../stm8/se8r01.c: 274: gtemp[3]=0xAC;
      00868E 1E 08            [ 2] 1119 	ldw	x, (0x08, sp)
      008690 A6 AC            [ 1] 1120 	ld	a, #0xac
      008692 F7               [ 1] 1121 	ld	(x), a
                                   1122 ;	../../stm8/se8r01.c: 275: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_RX_CTRL, gtemp, 4);
      008693 1E 0E            [ 2] 1123 	ldw	x, (0x0e, sp)
      008695 4B 04            [ 1] 1124 	push	#0x04
      008697 89               [ 2] 1125 	pushw	x
      008698 4B 31            [ 1] 1126 	push	#0x31
      00869A CD 81 9B         [ 4] 1127 	call	_SPI_write_buf
      00869D 5B 04            [ 2] 1128 	addw	sp, #4
                                   1129 ;	../../stm8/se8r01.c: 277: gtemp[0]=0x00;
      00869F 1E 0E            [ 2] 1130 	ldw	x, (0x0e, sp)
      0086A1 7F               [ 1] 1131 	clr	(x)
                                   1132 ;	../../stm8/se8r01.c: 278: gtemp[1]=0x14;
      0086A2 1E 0C            [ 2] 1133 	ldw	x, (0x0c, sp)
      0086A4 A6 14            [ 1] 1134 	ld	a, #0x14
      0086A6 F7               [ 1] 1135 	ld	(x), a
                                   1136 ;	../../stm8/se8r01.c: 279: gtemp[2]=0x08;
      0086A7 1E 0A            [ 2] 1137 	ldw	x, (0x0a, sp)
      0086A9 A6 08            [ 1] 1138 	ld	a, #0x08
      0086AB F7               [ 1] 1139 	ld	(x), a
                                   1140 ;	../../stm8/se8r01.c: 280: gtemp[3]=0x29;
      0086AC 1E 08            [ 2] 1141 	ldw	x, (0x08, sp)
      0086AE A6 29            [ 1] 1142 	ld	a, #0x29
      0086B0 F7               [ 1] 1143 	ld	(x), a
                                   1144 ;	../../stm8/se8r01.c: 281: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_FAGC_CTRL_1, gtemp, 4);
      0086B1 1E 0E            [ 2] 1145 	ldw	x, (0x0e, sp)
      0086B3 4B 04            [ 1] 1146 	push	#0x04
      0086B5 89               [ 2] 1147 	pushw	x
      0086B6 4B 33            [ 1] 1148 	push	#0x33
      0086B8 CD 81 9B         [ 4] 1149 	call	_SPI_write_buf
      0086BB 5B 04            [ 2] 1150 	addw	sp, #4
                                   1151 ;	../../stm8/se8r01.c: 283: gtemp[0]=0x02;
      0086BD 1E 0E            [ 2] 1152 	ldw	x, (0x0e, sp)
      0086BF A6 02            [ 1] 1153 	ld	a, #0x02
      0086C1 F7               [ 1] 1154 	ld	(x), a
                                   1155 ;	../../stm8/se8r01.c: 284: gtemp[1]=0xC1;
      0086C2 1E 0C            [ 2] 1156 	ldw	x, (0x0c, sp)
      0086C4 A6 C1            [ 1] 1157 	ld	a, #0xc1
      0086C6 F7               [ 1] 1158 	ld	(x), a
                                   1159 ;	../../stm8/se8r01.c: 285: gtemp[2]=0xCB;
      0086C7 1E 0A            [ 2] 1160 	ldw	x, (0x0a, sp)
      0086C9 A6 CB            [ 1] 1161 	ld	a, #0xcb
      0086CB F7               [ 1] 1162 	ld	(x), a
                                   1163 ;	../../stm8/se8r01.c: 286: gtemp[3]=0x1C;
      0086CC 1E 08            [ 2] 1164 	ldw	x, (0x08, sp)
      0086CE A6 1C            [ 1] 1165 	ld	a, #0x1c
      0086D0 F7               [ 1] 1166 	ld	(x), a
                                   1167 ;	../../stm8/se8r01.c: 287: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_AGC_GAIN, gtemp, 4);
      0086D1 1E 0E            [ 2] 1168 	ldw	x, (0x0e, sp)
      0086D3 4B 04            [ 1] 1169 	push	#0x04
      0086D5 89               [ 2] 1170 	pushw	x
      0086D6 4B 3D            [ 1] 1171 	push	#0x3d
      0086D8 CD 81 9B         [ 4] 1172 	call	_SPI_write_buf
      0086DB 5B 04            [ 2] 1173 	addw	sp, #4
                                   1174 ;	../../stm8/se8r01.c: 289: gtemp[0]=0x97;
      0086DD 1E 0E            [ 2] 1175 	ldw	x, (0x0e, sp)
      0086DF A6 97            [ 1] 1176 	ld	a, #0x97
      0086E1 F7               [ 1] 1177 	ld	(x), a
                                   1178 ;	../../stm8/se8r01.c: 290: gtemp[1]=0x64;
      0086E2 1E 0C            [ 2] 1179 	ldw	x, (0x0c, sp)
      0086E4 A6 64            [ 1] 1180 	ld	a, #0x64
      0086E6 F7               [ 1] 1181 	ld	(x), a
                                   1182 ;	../../stm8/se8r01.c: 291: gtemp[2]=0x00;
      0086E7 1E 0A            [ 2] 1183 	ldw	x, (0x0a, sp)
      0086E9 7F               [ 1] 1184 	clr	(x)
                                   1185 ;	../../stm8/se8r01.c: 292: gtemp[3]=0x01;
      0086EA 1E 08            [ 2] 1186 	ldw	x, (0x08, sp)
      0086EC A6 01            [ 1] 1187 	ld	a, #0x01
      0086EE F7               [ 1] 1188 	ld	(x), a
                                   1189 ;	../../stm8/se8r01.c: 293: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_RF_IVGEN, gtemp, 4);
      0086EF 1E 0E            [ 2] 1190 	ldw	x, (0x0e, sp)
      0086F1 4B 04            [ 1] 1191 	push	#0x04
      0086F3 89               [ 2] 1192 	pushw	x
      0086F4 4B 3E            [ 1] 1193 	push	#0x3e
      0086F6 CD 81 9B         [ 4] 1194 	call	_SPI_write_buf
      0086F9 5B 04            [ 2] 1195 	addw	sp, #4
                                   1196 ;	../../stm8/se8r01.c: 295: gtemp[0]=0x2A;
      0086FB 1E 0E            [ 2] 1197 	ldw	x, (0x0e, sp)
      0086FD A6 2A            [ 1] 1198 	ld	a, #0x2a
      0086FF F7               [ 1] 1199 	ld	(x), a
                                   1200 ;	../../stm8/se8r01.c: 296: gtemp[1]=0x04;
      008700 1E 0C            [ 2] 1201 	ldw	x, (0x0c, sp)
      008702 A6 04            [ 1] 1202 	ld	a, #0x04
      008704 F7               [ 1] 1203 	ld	(x), a
                                   1204 ;	../../stm8/se8r01.c: 297: gtemp[2]=0x00;
      008705 1E 0A            [ 2] 1205 	ldw	x, (0x0a, sp)
      008707 7F               [ 1] 1206 	clr	(x)
                                   1207 ;	../../stm8/se8r01.c: 298: gtemp[3]=0x7D;
      008708 1E 08            [ 2] 1208 	ldw	x, (0x08, sp)
      00870A A6 7D            [ 1] 1209 	ld	a, #0x7d
      00870C F7               [ 1] 1210 	ld	(x), a
                                   1211 ;	../../stm8/se8r01.c: 299: SPI_write_buf(iRF_CMD_WRITE_REG|iRF_BANK1_TEST_PKDET, gtemp, 4);
      00870D 1E 0E            [ 2] 1212 	ldw	x, (0x0e, sp)
      00870F 4B 04            [ 1] 1213 	push	#0x04
      008711 89               [ 2] 1214 	pushw	x
      008712 4B 3F            [ 1] 1215 	push	#0x3f
      008714 CD 81 9B         [ 4] 1216 	call	_SPI_write_buf
      008717 5B 04            [ 2] 1217 	addw	sp, #4
                                   1218 ;	../../stm8/se8r01.c: 301: rf_switch_bank(iBANK0);
      008719 4B 00            [ 1] 1219 	push	#0x00
      00871B CD 83 E2         [ 4] 1220 	call	_rf_switch_bank
      00871E 5B 10            [ 2] 1221 	addw	sp, #16
      008720 81               [ 4] 1222 	ret
                                   1223 ;	../../stm8/se8r01.c: 305: void se8r01_settings() {
                                   1224 ;	-----------------------------------------
                                   1225 ;	 function se8r01_settings
                                   1226 ;	-----------------------------------------
      008721                       1227 _se8r01_settings:
      008721 52 06            [ 2] 1228 	sub	sp, #6
                                   1229 ;	../../stm8/se8r01.c: 306: uint8_t TX_ADDRESS[TX_ADR_WIDTH]  = 
      008723 96               [ 1] 1230 	ldw	x, sp
      008724 5C               [ 1] 1231 	incw	x
      008725 1F 05            [ 2] 1232 	ldw	(0x05, sp), x
      008727 A6 34            [ 1] 1233 	ld	a, #0x34
      008729 F7               [ 1] 1234 	ld	(x), a
      00872A 1E 05            [ 2] 1235 	ldw	x, (0x05, sp)
      00872C 5C               [ 1] 1236 	incw	x
      00872D A6 43            [ 1] 1237 	ld	a, #0x43
      00872F F7               [ 1] 1238 	ld	(x), a
      008730 1E 05            [ 2] 1239 	ldw	x, (0x05, sp)
      008732 5C               [ 1] 1240 	incw	x
      008733 5C               [ 1] 1241 	incw	x
      008734 A6 10            [ 1] 1242 	ld	a, #0x10
      008736 F7               [ 1] 1243 	ld	(x), a
      008737 1E 05            [ 2] 1244 	ldw	x, (0x05, sp)
      008739 A6 10            [ 1] 1245 	ld	a, #0x10
      00873B E7 03            [ 1] 1246 	ld	(0x0003, x), a
                                   1247 ;	../../stm8/se8r01.c: 311: SPI_write_read_reg(WRITE_REG|iRF_BANK0_EN_AA, 0x01);          //enable auto acc on pip 1
      00873D 4B 01            [ 1] 1248 	push	#0x01
      00873F 4B 21            [ 1] 1249 	push	#0x21
      008741 CD 81 76         [ 4] 1250 	call	_SPI_write_read_reg
      008744 5B 02            [ 2] 1251 	addw	sp, #2
                                   1252 ;	../../stm8/se8r01.c: 312: SPI_write_read_reg(WRITE_REG|iRF_BANK0_EN_RXADDR, 0x01);      //enable pip 1
      008746 4B 01            [ 1] 1253 	push	#0x01
      008748 4B 22            [ 1] 1254 	push	#0x22
      00874A CD 81 76         [ 4] 1255 	call	_SPI_write_read_reg
      00874D 5B 02            [ 2] 1256 	addw	sp, #2
                                   1257 ;	../../stm8/se8r01.c: 313: SPI_write_read_reg(WRITE_REG|iRF_BANK0_SETUP_AW, 0x02);        //4 byte adress
      00874F 4B 02            [ 1] 1258 	push	#0x02
      008751 4B 23            [ 1] 1259 	push	#0x23
      008753 CD 81 76         [ 4] 1260 	call	_SPI_write_read_reg
      008756 5B 02            [ 2] 1261 	addw	sp, #2
                                   1262 ;	../../stm8/se8r01.c: 315: SPI_write_read_reg(WRITE_REG|iRF_BANK0_SETUP_RETR, 0x0a);        //lowest 4 bits 0-15 rt transmisston higest 4 bits 256-4096us Auto Retransmit Delay
      008758 4B 0A            [ 1] 1263 	push	#0x0a
      00875A 4B 24            [ 1] 1264 	push	#0x24
      00875C CD 81 76         [ 4] 1265 	call	_SPI_write_read_reg
      00875F 5B 02            [ 2] 1266 	addw	sp, #2
                                   1267 ;	../../stm8/se8r01.c: 316: SPI_write_read_reg(WRITE_REG|iRF_BANK0_RF_CH, 40);
      008761 4B 28            [ 1] 1268 	push	#0x28
      008763 4B 25            [ 1] 1269 	push	#0x25
      008765 CD 81 76         [ 4] 1270 	call	_SPI_write_read_reg
      008768 5B 02            [ 2] 1271 	addw	sp, #2
                                   1272 ;	../../stm8/se8r01.c: 317: SPI_write_read_reg(WRITE_REG|iRF_BANK0_RF_SETUP, 0x5f);        //500kps 0x4f
      00876A 4B 5F            [ 1] 1273 	push	#0x5f
      00876C 4B 26            [ 1] 1274 	push	#0x26
      00876E CD 81 76         [ 4] 1275 	call	_SPI_write_read_reg
      008771 5B 02            [ 2] 1276 	addw	sp, #2
                                   1277 ;	../../stm8/se8r01.c: 321: SPI_write_buf(WRITE_REG + TX_ADDR, TX_ADDRESS, TX_ADR_WIDTH);  //from tx
      008773 1E 05            [ 2] 1278 	ldw	x, (0x05, sp)
      008775 4B 04            [ 1] 1279 	push	#0x04
      008777 89               [ 2] 1280 	pushw	x
      008778 4B 30            [ 1] 1281 	push	#0x30
      00877A CD 81 9B         [ 4] 1282 	call	_SPI_write_buf
      00877D 5B 04            [ 2] 1283 	addw	sp, #4
                                   1284 ;	../../stm8/se8r01.c: 322: SPI_write_buf(WRITE_REG + RX_ADDR_P0, TX_ADDRESS, TX_ADR_WIDTH); // Use the same address on the RX device as the TX device
      00877F 1E 05            [ 2] 1285 	ldw	x, (0x05, sp)
      008781 4B 04            [ 1] 1286 	push	#0x04
      008783 89               [ 2] 1287 	pushw	x
      008784 4B 2A            [ 1] 1288 	push	#0x2a
      008786 CD 81 9B         [ 4] 1289 	call	_SPI_write_buf
      008789 5B 04            [ 2] 1290 	addw	sp, #4
                                   1291 ;	../../stm8/se8r01.c: 323: SPI_write_read_reg(WRITE_REG + RX_PW_P0, TX_PLOAD_WIDTH); // Select same RX payload width as TX Payload width
      00878B 4B 06            [ 1] 1292 	push	#0x06
      00878D 4B 31            [ 1] 1293 	push	#0x31
      00878F CD 81 76         [ 4] 1294 	call	_SPI_write_read_reg
      008792 5B 08            [ 2] 1295 	addw	sp, #8
      008794 81               [ 4] 1296 	ret
                                   1297 ;	../../stm8/se8r01.c: 327: void se8r01_flush_TX() {
                                   1298 ;	-----------------------------------------
                                   1299 ;	 function se8r01_flush_TX
                                   1300 ;	-----------------------------------------
      008795                       1301 _se8r01_flush_TX:
                                   1302 ;	../../stm8/se8r01.c: 328: SPI_write_read_reg(FLUSH_TX, 0xff);
      008795 4B FF            [ 1] 1303 	push	#0xff
      008797 4B E1            [ 1] 1304 	push	#0xe1
      008799 CD 81 76         [ 4] 1305 	call	_SPI_write_read_reg
      00879C 5B 02            [ 2] 1306 	addw	sp, #2
      00879E 81               [ 4] 1307 	ret
                                   1308 ;	../../stm8/se8r01.c: 331: void se8r01_flush_RX() {
                                   1309 ;	-----------------------------------------
                                   1310 ;	 function se8r01_flush_RX
                                   1311 ;	-----------------------------------------
      00879F                       1312 _se8r01_flush_RX:
                                   1313 ;	../../stm8/se8r01.c: 332: SPI_write_read_reg(FLUSH_RX, 0xff);
      00879F 4B FF            [ 1] 1314 	push	#0xff
      0087A1 4B E2            [ 1] 1315 	push	#0xe2
      0087A3 CD 81 76         [ 4] 1316 	call	_SPI_write_read_reg
      0087A6 5B 02            [ 2] 1317 	addw	sp, #2
      0087A8 81               [ 4] 1318 	ret
                                   1319 	.area CODE
      0087A9                       1320 ___str_0:
      0087A9 49 6E 69 74 69 61 6C  1321 	.ascii "Initializing SPI"
             69 7A 69 6E 67 20 53
             50 49
      0087B9 0A                    1322 	.db 0x0a
      0087BA 00                    1323 	.db 0x00
      0087BB                       1324 ___str_1:
      0087BB 53 74 61 74 75 73 3A  1325 	.ascii "Status: %02x "
             20 25 30 32 78 20
      0087C8 0A                    1326 	.db 0x0a
      0087C9 00                    1327 	.db 0x00
      0087CA                       1328 ___str_2:
      0087CA 52 58 20 6D 6F 64 65  1329 	.ascii "RX mode"
      0087D1 0A                    1330 	.db 0x0a
      0087D2 00                    1331 	.db 0x00
      0087D3                       1332 ___str_3:
      0087D3 54 58 20 6D 6F 64 65  1333 	.ascii "TX mode, status %02x"
             2C 20 73 74 61 74 75
             73 20 25 30 32 78
      0087E7 0A                    1334 	.db 0x0a
      0087E8 00                    1335 	.db 0x00
      0087E9                       1336 ___str_4:
      0087E9 63 6F 6E 6E 65 63 74  1337 	.ascii "connected? %02x"
             65 64 3F 20 25 30 32
             78
      0087F8 0A                    1338 	.db 0x0a
      0087F9 00                    1339 	.db 0x00
      0087FA                       1340 ___str_5:
      0087FA 63 6C 65 61 72 69 6E  1341 	.ascii "clearing irq flag"
             67 20 69 72 71 20 66
             6C 61 67
      00880B 0A                    1342 	.db 0x0a
      00880C 00                    1343 	.db 0x00
      00880D                       1344 ___str_6:
      00880D 54 65 6D 70 20 30 3A  1345 	.ascii "Temp 0: %02x "
             20 25 30 32 78 20
      00881A 0A                    1346 	.db 0x0a
      00881B 00                    1347 	.db 0x00
                                   1348 	.area INITIALIZER
                                   1349 	.area CABS (ABS)
